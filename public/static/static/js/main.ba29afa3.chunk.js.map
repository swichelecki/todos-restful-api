{"version":3,"sources":["App.js","index.js"],"names":["Todo","todo","index","completeTodo","removeTodo","editTodo","className","style","textDecoration","isComplete","text","onClick","_id","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","EditForm","editThis","postEdit","value2","setValue2","id","App","todos","setTodos","fetchData","a","fetch","res","json","then","catch","err","message","useEffect","newTodos","method","headers","body","JSON","stringify","data","console","log","isEditing","setIsEditing","setEditThis","splice","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba29afa3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction Todo({ todo, index, completeTodo, removeTodo, editTodo }) {\n\n  return(\n    <div\n      className=\"todo\"\n      style={{ textDecoration: todo.isComplete ? \"line-through\" : \"\" }}\n      >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index, todo._id, todo.text, todo.isComplete)}>Complete</button>\n        <button onClick={() => editTodo(index, todo._id, todo.text, todo.isComplete)}>Edit</button>\n        <button onClick={() => removeTodo(index, todo._id)}>x</button>\n      </div>\n    </div>\n  )\n\n}\n\nfunction TodoForm({ addTodo }) {\n\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  )\n\n}\n\nfunction EditForm({ editThis, postEdit }) {\n\n  const [value2, setValue2] = useState(editThis);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value2) return;\n    postEdit(value2);\n    setValue2({text: \"\"});\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value2.text}\n        onChange={e => setValue2({text: e.target.value, id: editThis.id, index: editThis.index, isComplete: editThis.isComplete })}\n      />\n    </form>\n  )\n\n}\n\nfunction App() {\n\n  const [todos, setTodos] = useState([\n    /*{ text: \"Learn React\",\n      isComplete: false\n    },\n    { text: \"Meet friend for lunch\",\n      isComplete: false\n    },\n    { text: \"Build really cool todo app\",\n      isComplete: false\n    }*/\n  ]);\n\n  async function fetchData() {\n    const res = await fetch('/todos');\n    res\n      .json()\n      .then(res => setTodos(res))\n      .catch(err => res.json({ message: err }));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const addTodo = text => {\n    \n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n\n    fetch('/todos', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({ text })\n    })\n    .then((res) => res.json())\n    .then((data) => {\n      fetchData();\n    })\n\n  }\n\n  const completeTodo = (index, id, text, isComplete) => {\n    \n    (isComplete === false) ? isComplete = true : isComplete = false;\n    \n    const newTodos = [...todos];\n    newTodos[index].isComplete = isComplete;  \n    setTodos(newTodos);\n\n    fetch(`/todos/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({ \n        isComplete,\n        text \n      })\n    })\n    .then((res) => res.json())\n    .then((data) => console.log(data))\n\n  }\n\n  const postEdit = (value2) => {\n  \n    const {text, id, index, isComplete} = value2;\n\n    const newTodos = [...todos];\n    newTodos[index].text = text;\n    newTodos[index].isComplete = isComplete;\n    setTodos(newTodos);\n    \n    fetch(`/todos/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({ \n        text,\n        isComplete\n      })\n    })\n    .then((res) => res.json())\n    .then((data) => {\n      fetchData();\n      setIsEditing(false);\n    })\n\n  }\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [editThis, setEditThis] = useState();\n  \n  const editTodo = (index, id, text, isComplete) => {\n\n     setIsEditing(true);\n     setEditThis({index, id, text, isComplete});\n\n  }\n\n  const removeTodo = (index, id) => {\n\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n\n    fetch(`/todos/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-type': 'application/json'\n      }\n    })\n    .then((res) => res.json())\n    .then((data) => console.log(data))\n\n  }\n\n  return(\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            editTodo={editTodo}\n          />\n        ))}\n        { isEditing === true ?\n        (<EditForm editThis={editThis} postEdit={postEdit} />)\n        :\n        (<TodoForm addTodo={addTodo} />)\n        }\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}